openapi: 3.1.0
info:
  title: Todde Public Site API
  version: 0.1.0
  description: >-
    REST interface serving homepage and catalog content for the Todde Integrated
    Services rebrand. Responses are cached for 5 minutes and localized for en-NG.
servers:
  - url: https://www.todde.com
    description: Production
  - url: https://staging.todde.com
    description: Staging
paths:
  /api/catalog/featured:
    get:
      summary: Retrieve featured vehicles for homepage hero sections
      tags: [Catalog]
      parameters:
        - $ref: '#/components/parameters/Locale'
      responses:
        '200':
          description: Featured listings payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeaturedCatalogResponse'
        '503':
          description: Upstream inventory unavailable
  /api/catalog/categories:
    get:
      summary: Fetch navigable vehicle categories with icon metadata
      tags: [Catalog]
      parameters:
        - $ref: '#/components/parameters/Locale'
      responses:
        '200':
          description: Category collection
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryCollection'
  /api/content/homepage:
    get:
      summary: Fetch homepage marketing copy, value propositions, and banner assets
      tags: [Content]
      parameters:
        - $ref: '#/components/parameters/Locale'
      responses:
        '200':
          description: Homepage content payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HomepageContent'
components:
  parameters:
    Locale:
      name: Accept-Language
      in: header
      required: false
      schema:
        type: string
        example: en-NG
      description: Optional locale for localized copy.
  schemas:
    FeaturedCatalogResponse:
      type: object
      required: [featured, hero]
      properties:
        hero:
          $ref: '#/components/schemas/HeroListing'
        featured:
          type: array
          minItems: 4
          items:
            $ref: '#/components/schemas/VehicleCard'
    CategoryCollection:
      type: object
      required: [categories]
      properties:
        categories:
          type: array
          minItems: 6
          items:
            $ref: '#/components/schemas/VehicleCategory'
    HomepageContent:
      type: object
      required: [valueProps, financingBanner, testimonials]
      properties:
        valueProps:
          type: array
          minItems: 4
          items:
            $ref: '#/components/schemas/ValueProp'
        financingBanner:
          $ref: '#/components/schemas/Banner'
        testimonials:
          type: array
          items:
            $ref: '#/components/schemas/Testimonial'
    HeroListing:
      type: object
      required: [title, subtitle, cta]
      properties:
        title:
          type: string
        subtitle:
          type: string
        cta:
          $ref: '#/components/schemas/Cta'
        image:
          $ref: '#/components/schemas/ResponsiveAsset'
    VehicleCard:
      type: object
      required:
        [slug, make, model, year, priceNaira, thumbnail, downPaymentPercent]
      properties:
        slug:
          type: string
        make:
          type: string
        model:
          type: string
        year:
          type: integer
          minimum: 1990
        priceNaira:
          type: number
          minimum: 1000000
        downPaymentPercent:
          type: number
          const: 30
        thumbnail:
          $ref: '#/components/schemas/ResponsiveAsset'
        badges:
          type: array
          items:
            type: string
        financingProgramId:
          type: string
    VehicleCategory:
      type: object
      required: [name, icon]
      properties:
        name:
          type: string
        order:
          type: integer
        icon:
          $ref: '#/components/schemas/IconAsset'
    ValueProp:
      type: object
      required: [title, description, icon]
      properties:
        title:
          type: string
        description:
          type: string
        icon:
          $ref: '#/components/schemas/IconAsset'
    Banner:
      type: object
      required: [headline, subtext, cta, background]
      properties:
        headline:
          type: string
        subtext:
          type: string
        cta:
          $ref: '#/components/schemas/Cta'
        background:
          $ref: '#/components/schemas/ResponsiveAsset'
    Testimonial:
      type: object
      properties:
        quote:
          type: string
        name:
          type: string
        role:
          type: string
        image:
          $ref: '#/components/schemas/IconAsset'
    Cta:
      type: object
      required: [label, url]
      properties:
        label:
          type: string
        url:
          type: string
        style:
          type: string
          enum: [primary, secondary]
    ResponsiveAsset:
      type: object
      required: [alt, desktop, tablet, mobile]
      properties:
        alt:
          type: string
        desktop:
          type: string
        tablet:
          type: string
        mobile:
          type: string
    IconAsset:
      type: object
      required: [alt, light, dark]
      properties:
        alt:
          type: string
        light:
          type: string
        dark:
          type: string
``